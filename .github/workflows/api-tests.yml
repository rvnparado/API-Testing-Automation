name: API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Clean npm cache
      run: |
        npm cache clean --force
        rm -rf node_modules package-lock.json

    - name: Install Node.js dependencies
      run: |
        npm install
        npm list express sqlite3 cors || true

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start API server
      run: |
        node server.js &
        echo "Waiting for server to start..."
        # Wait for the server to be ready
        for i in {1..30}; do
          if curl -s http://localhost:3000/health >/dev/null; then
            echo "Server is up!"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "Server failed to start"
            exit 1
          fi
          echo "Attempt $i: Server not ready yet..."
          sleep 2
        done

    - name: Run API tests
      run: python api_test.py

    - name: Stop API server
      if: always()
      run: pkill node || true 